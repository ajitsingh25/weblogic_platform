
import os

try:
	commonModule
except NameError:
	execfile('ConfigNOW/common/common.py')


def __createNetworkChannelJVM(JVM,listenPort,machineName):

    #portMask = int("10" + listenPort[1:])
    portMask = int("10" + str(listenPort)[1:])
    #print ":: Updated the Listen Port to = " + portMask.toString()
    print ":: Updated the Listen Port to = " + str(portMask)

    # Create the Channel
    try:
        edit()
        startEdit()

        cd('/')
        cd('/Servers/%s' % (JVM))
        cmo.createNetworkAccessPoint(NETWORK_CHANNEL)

        cd('/Servers/%s/NetworkAccessPoints/%s' % (JVM,NETWORK_CHANNEL))
        cmo.setProtocol(DEFAULT_PROTOCOL)
        cmo.setListenAddress(machineName)
        cmo.setListenPort(portMask)
        cmo.setEnabled(true)
        cmo.setHttpEnabledForThisProtocol(false)
        cmo.setTunnelingEnabled(false)
        cmo.setOutboundEnabled(true)
        cmo.setOutboundPrivateKeyEnabled(true)
        cmo.setTwoWaySSLEnabled(true)
        cmo.setClientCertificateEnforced(false)
        cmo.setChannelIdentityCustomized(false)
        cmo.setCustomPrivateKeyAlias(None)
        cmo.setCustomPrivateKeyPassPhrase(None)
        cmo.setChannelWeight(80)
        activate()
    except weblogic.descriptor.BeanAlreadyExistsException, bae:
        print "<Error> Caught BeanAlreadyExistsException exception in createNetworkChannelJVM, so skipping it !!"
        stopEdit('y')
    except Exception, e:
        print "<Error> Caught exception in createNetworkChannelJVM"
        stopEdit('y')
        raise e
				
				
def createDomainNetworkChannel(domainProperties):
	channels=domainProperties.getProperty('cluster.network.channels')
	if not channels is None and len(channels)>0:
		channelsList = channels.split(',')
		for each_channel in channelsList:
			networkChannelName=domainProperties.getProperty('cluster.network.channel.'+str(each_channel)+'.name')
			networkChannelProtocol=domainProperties.getProperty('cluster.network.channel.'+str(each_channel)+'.protocol')
			createNetworkChannel(domainProperties, networkChannelName, networkChannelProtocol)